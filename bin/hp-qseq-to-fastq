#!/usr/bin/env python

__DESCRIPTION__ = '''

qseq to fastq - convert two qseq files from paired-end sequencing
to a single, interleaved fastq file

qseq_to_fastq --left left_reads.txt --right right_reads.txt --out interleaved.fastq

or

qseq_to_fasta --left left_reads.txt --out left_reads.fastq

'''

import argparse
from itertools import izip

def parse_args():
    parser = argparse.ArgumentParser()

    parser.add_argument('--left', default='/dev/stdin')
    parser.add_argument('--right', default=False, help='optional')

    parser.add_argument('--out', default='/dev/stdout')

    return parser.parse_args()


def to_fasta(s):

    s = s.strip().split('\t')

    header = ':'.join(s[0:8])
    sequence = s[8].replace('.', 'N')
    quality = s[9]

    return '@%s\n%s\n+%s\n%s' % (header, sequence, header, quality)



def flatten(iterable):
    ''' Flatten a list of lists (but go no further) '''
    for i in iterable:
        for j in i:
            yield j


def main():

    args = parse_args()

    left_handle = open(args.left)

    if args.right:
        right_handle = open(args.right)
        iterator = izip(left_handle, right_handle)
    else:
        iterator = izip(left_handle)

    iterator = flatten(iterator)

    out_handle = open(args.out, 'w')

    for record in iterator:
        fasta = to_fasta(record)
        print >> out_handle, fasta



if __name__ == '__main__':
    main()
